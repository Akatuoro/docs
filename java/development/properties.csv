cds;CdsProperties;Properties to configure CDS Services;com.sap.cds.services.environment.CdsProperties;true;true
cds.environment;Environment;Properties for environments, like local development or Cloud Foundry.;;true;false
cds.environment.local;Local;Properties for the local environment.;;true;false
cds.environment.local.defaultEnvPath;String;Specification of the default environment JSON file. If this property starts with "classpath:", it is read<br>as classloader resource. Otherwise it is interpreted as file-system path.<br>The file content follows the structure of Cloud Foundry's VCAP_SERVICES and VCAP_APPLICATION environment variables.<br>If this property specifies a folder, the filename `default-env.json` is appended to it.;;false;false
cds.dataSource;DataSource;Properties for the primary data source, used by the default persistence service.;;true;false
cds.dataSource.embedded;boolean;Determines, if the data source is considered embedded (in-memory).;;false;false
cds.dataSource.binding;String;The name of the primary service binding, used by the default persistence service.;;false;false
cds.dataSource.csv;Csv;Properties for CSV initialization.;;true;false
cds.dataSource.csv.initializationMode;String;Determines in which scenarios the default persistence service is initialized with CSV data.<br>By default, CSV initialization only happens, if the data source is embedded (in-memory).<br>Possible values are: `embedded`, `never`, `always`.;;false;false
cds.dataSource.csv.fileSuffix;String;The file suffix of CSV files.;;false;false
cds.dataSource.csv.paths;List<String>;The file-system paths to search for CSV files in.<br>Using `/**` at the end of the path triggers a recursive search.;;false;false
cds.dataSource.csv.singleChangeset;boolean;Enables import of all CSV files in a single changeset. By default, each CSV file is imported in a separate changeset.;;false;false
cds.dataSource.autoConfig;Enabled;Properties to control the `DataSource` auto-configuration from service bindings.;;true;false
cds.dataSource.autoConfig.enabled;boolean;Determines, if it is enabled.;;false;false
cds.model;Model;Properties for the CDS model.;;true;false
cds.model.csnPath;String;The resource path to the `csn.json` file.;;false;false
cds.model.includeUiAnnotations;boolean;Determines, if UI annotations are included in the model.;;false;false
cds.model.provider;Provider;The model provider configuration.;;true;false
cds.model.provider.url;String;The URL of the Model Provider.;;false;false
cds.model.provider.cache;Cache;Properties for the CDS model and EDMX metadata caches.;;true;false
cds.model.provider.cache.maxSize;int;The number of entries in the CDS model and EDMX metadata caches.;;false;false
cds.model.provider.cache.expirationTime;int;The lifetime of an entry in seconds after the entry's creation, the most recent replacement of its value, or its last access.;;false;false
cds.model.provider.cache.refreshTime;int;The time in seconds after which a cached entry is refreshed.;;false;false
cds.security;Security;Properties for security configurations of services and endpoints.;;true;false
cds.security.logPotentiallySensitive;boolean;Determines, if potentially sensitive data, for example values in CQN queries, might be logged.;;false;false
cds.security.authentication;Authentication;Properties for authentication in general.;;true;false
cds.security.authentication.mode;String;Determines the mode that is used when authenticating endpoints of protocol-adapters. Possible values are:<br>- never: No endpoint requires authentication<br>- model-relaxed: Authentication is derived from @requires/@restrict, defaults to public endpoints.<br>- model-strict: Authentication is derived from @requires/@restrict, defaults to authenticated endpoints.<br>- always: All endpoints require authentication;;false;false
cds.security.authentication.authenticateMetadataEndpoints;boolean;Determines, if OData $metadata endpoints enforce authentication.;;false;false
cds.security.authentication.authenticateUnknownEndpoints;boolean;Determines, if security configurations enforce authentication for endpoints not managed by protocol-adapters.;;false;false
cds.security.authentication.normalizeProviderTenant;boolean;Determines, if the provider tenant is normalized to `null`.;;false;false
cds.security.authorization;Authorization;Properties for authorization.;;true;false
cds.security.authorization.enabled;boolean;Determines, if it is enabled.;;false;false
cds.security.authorization.draftProtection;Enabled;Properties to control the protection of drafts.<br>If a draft is protected, it is only accessible by its creator.;;true;false
cds.security.authorization.draftProtection.enabled;boolean;Determines, if it is enabled.;;false;false
cds.security.identity;Identity;Properties for authentication based on Identity Service (IAS).;;true;false
cds.security.identity.enabled;boolean;Determines, if it is enabled.;;false;false
cds.security.identity.authConfig;Enabled;Properties for the Identity Spring security auto-configuration.;;true;false
cds.security.identity.authConfig.enabled;boolean;Determines, if it is enabled.;;false;false
cds.security.xsuaa;Xsuaa;Properties for authentication based on XSUAA.;;true;false
cds.security.xsuaa.binding;String;The name of the XSUAA service binding, used for the XSUAA security auto-configuration.;;false;false
cds.security.xsuaa.enabled;boolean;Determines, if it is enabled.;;false;false
cds.security.xsuaa.authConfig;Enabled;Properties for the XSUAA Spring security auto-configuration.;;true;false
cds.security.xsuaa.authConfig.enabled;boolean;Determines, if it is enabled.;;false;false
cds.security.mock;Mock;Properties for authentication based on mock-users.;;true;false
cds.security.mock.enabled;boolean;Determines, if it is enabled.;;false;false
cds.security.mock.users;Map<String,User>;The mock-users, used for basic authentication in local development and test scenarios.<br>The key can be chosen arbitrarily and is used as the user name, if the `name` property is not explicitly defined.<br>In addition it can be leveraged to split configuration across multiple profiles.;com.sap.cds.services.environment.CdsProperties$Security$Mock$User;true;false
cds.security.mock.users.<key>.id;String;The ID of the mock-user.;;false;false
cds.security.mock.users.<key>.name;String;The (mandatory) name of the mock-user.<br>It's used to perform the basic authentication.;;false;false
cds.security.mock.users.<key>.password;String;The (optional) password of the mock-user.<br>It's used to perform the basic authentication.;;false;false
cds.security.mock.users.<key>.tenant;String;The tenant of the mock-user.;;false;false
cds.security.mock.users.<key>.systemUser;boolean;Determines, if this mock-user is treated as a system user.;;false;false
cds.security.mock.users.<key>.privileged;boolean;Determines, if this mock-user is treated as the privileged user.;;false;false
cds.security.mock.users.<key>.internalUser;boolean;Determines, if this mock-user is treated as the internal user.;;false;false
cds.security.mock.users.<key>.roles;List<String>;The list of roles, that are assigned to this mock-user.;;false;false
cds.security.mock.users.<key>.features;List<String>;The list of enabled feature toggles for this user. If set, it overrules features of the tenant (if provided).;;false;false
cds.security.mock.users.<key>.attributes;Map<String,List<String>>;A map of user attributes, that are assigned to the mock-user.<br>The name of the attribute needs to be given as the key.<br>The attribute values are provided as a list.;;false;false
cds.security.mock.users.<key>.unrestricted;List<String>;A list of attribute names, for which the mock-user has no restrictions.<br>This is treated as if the mock-user effectively had all possible values of this attribute assigned.;;false;false
cds.security.mock.users.<key>.additional;Map<String,Object>;A map of additional properties of the mock-user.<br>It can be used to mock authentication specific properties (e.g. email address).<br>The name of the additional attribute needs to be given as the key.<br>The value of the attribute can be provided as an arbitrary object.;;false;false
cds.security.mock.defaultUsers;Enabled;Enables a list of default mock-users.;;true;false
cds.security.mock.defaultUsers.enabled;boolean;Determines, if it is enabled.;;false;false
cds.security.mock.tenants;Map<String,Tenant>;The tenants in local development and test scenarios.<br>The key can be chosen arbitrarily and is used as the tenant name, if the `name` property is not explicitly defined.<br>In addition it can be leveraged to split configuration across multiple profiles.;com.sap.cds.services.environment.CdsProperties$Security$Mock$Tenant;true;false
cds.security.mock.tenants.<key>.name;String;The (mandatory) name of the tenant;;false;false
cds.security.mock.tenants.<key>.features;List<String>;The list of enabled feature toggles for this tenant.;;false;false
cds.indexPage;Servlet;Properties for the index page.;;true;false
cds.indexPage.path;String;The base-path of the adapter endpoint.;;false;false
cds.indexPage.enabled;boolean;Determines, if it is enabled.;;false;false
cds.odataV4;ODataV4;Properties for the OData V4 protocol adapter.;;true;false
cds.odataV4.contextAbsoluteUrl;boolean;Determines, if URLs in the @odata.context response annotation are absolute.;;false;false
cds.odataV4.edmxPath;String;The JAR resource path to search for OData V4 EDMX files.;;false;false
cds.odataV4.endpoint;Servlet;Properties of the OData V4 protocol adapter endpoint.;;true;false
cds.odataV4.endpoint.path;String;The base-path of the adapter endpoint.;;false;false
cds.odataV4.endpoint.enabled;boolean;Determines, if it is enabled.;;false;false
cds.odataV4.batch;Batch;Properties for OData batch requests.;;true;false
cds.odataV4.batch.maxRequests;long;Defines the maximum number of requests within OData batch requests. By default, no limit applies.;;false;false
cds.odataV2;ODataV2;Properties for the OData V2 protocol adapter.;;true;false
cds.odataV2.edmxPath;String;The JAR resource path to search for OData V2 EDMX files.;;false;false
cds.odataV2.caseSensitiveFilter;boolean;Determines whether OData functions 'substringof', 'startswith' and 'endswith' are<br>case-sensitive.;;false;false
cds.odataV2.endpoint;Servlet;Properties of the OData V2 protocol adapter endpoint.;;true;false
cds.odataV2.endpoint.path;String;The base-path of the adapter endpoint.;;false;false
cds.odataV2.endpoint.enabled;boolean;Determines, if it is enabled.;;false;false
cds.odataV2.batch;Batch;Properties for OData batch requests.;;true;false
cds.odataV2.batch.maxRequests;long;Defines the maximum number of requests within OData batch requests. By default, no limit applies.;;false;false
cds.hcql;Hcql;Properties for the HCQL protocol adapter.;;true;false
cds.hcql.endpoint;Servlet;Properties of the HCQL protocol adapter endpoint.;;true;false
cds.hcql.endpoint.path;String;The base-path of the adapter endpoint.;;false;false
cds.hcql.endpoint.enabled;boolean;Determines, if it is enabled.;;false;false
cds.messaging;Messaging;Properties for messaging services.;;true;false
cds.messaging.routes;List<Route>;The list of routes for the composite messaging service.<br>The first route that matches is used. Therefore the order of these routes has significance.;com.sap.cds.services.environment.CdsProperties$Composite$CompositeServiceConfig$Route;true;false
cds.messaging.routes.<index>.service;String;The target service of the route.;;false;false
cds.messaging.routes.<index>.events;List<String>;The list of events/topics, which are propagated to/from the target service.;;false;false
cds.messaging.services;Map<String,MessagingServiceConfig>;Properties for messaging services.<br>The key can be chosen arbitrarily and is used as the messaging service name, if the `name` property is not explicitly defined.<br>In addition it can be leveraged to split configuration across multiple profiles.;com.sap.cds.services.environment.CdsProperties$Messaging$MessagingServiceConfig;true;false
cds.messaging.services.<key>.name;String;The name of the messaging service.;;false;false
cds.messaging.services.<key>.kind;String;The kind of the messaging service.<br>It usually reflects the corresponding service binding type.<br>Possible values are: `local-messaging`, `file-based-messaging`, `enterprise-messaging`, `mqueue-sandbox`.;;false;false
cds.messaging.services.<key>.binding;String;The name of the service binding used for this messaging service.<br>In case of file-based-messaging this specifies the file-system path to the exchange file.;;false;false
cds.messaging.services.<key>.subscribePrefix;String;The string used to prefix topics when subscribing to events.;;false;false
cds.messaging.services.<key>.publishPrefix;String;The string used to prefix topics when publishing events.;;false;false
cds.messaging.services.<key>.format;String;The message format to be assumed on subscriptions and applied when publishing.<br>Possible values are: `cloudevents`;;false;false
cds.messaging.services.<key>.enabled;boolean;Determines, if it is enabled.;;false;false
cds.messaging.services.<key>.connection;Connection;Properties for the JMS client connection.;;true;false
cds.messaging.services.<key>.connection.dedicated;boolean;Determines, if this messaging service uses its own dedicated JMS client connection.<br>By default, JMS client connections to the same messaging broker are shared.;;false;false
cds.messaging.services.<key>.connection.properties;Map<String,String>;Properties passed to the JMS client connection.<br>The possible keys and values depend on the messaging service implementation.;;false;false
cds.messaging.services.<key>.queue;Queue;Properties of the queue that is created for the messaging service.;;true;false
cds.messaging.services.<key>.queue.name;String;The name of the queue.<br>The queue may already exist with some custom configuration. In that case the queue is not recreated.;;false;false
cds.messaging.services.<key>.queue.config;Map<String,String>;Properties passed to the messaging broker when creating the queue.<br>The possible keys and values depend on the messaging service implementation.;;false;false
cds.messaging.services.<key>.queue.subscriptions;List<String>;A list of additional topics, that are subscribed on the queue.<br>By default event handler registrations should be used to trigger subscriptions.<br>This property is intended for purposes when subscriptions can not be inferred from event handler registrations.;;false;false
cds.messaging.services.<key>.queue.forceListening;boolean;Specifies whether a queue listener should be connected even if no subscription is available.;;false;false
cds.messaging.services.<key>.outbox;Outbox;Properties to control, if and how the Outbox should be used for this messaging service.;;true;false
cds.messaging.services.<key>.outbox.enabled;boolean;Determines, if it is enabled.;;false;false
cds.messaging.services.<key>.outbox.persistent;Enabled;Controls usage of the persistent Outbox if present.;;true;false
cds.messaging.services.<key>.outbox.persistent.enabled;boolean;Determines, if it is enabled.;;false;false
cds.multiTenancy;MultiTenancy;Properties for multitenancy and extensibility.;;true;false
cds.multiTenancy.componentScan;String;Package to be included in the component scan of the Subscribe, Deploy and Unsubscribe main methods.;;false;false
cds.multiTenancy.endpoint;Servlet;Properties of the subscription HTTP endpoints.;;true;false
cds.multiTenancy.endpoint.path;String;The base-path of the adapter endpoint.;;false;false
cds.multiTenancy.endpoint.enabled;boolean;Determines, if it is enabled.;;false;false
cds.multiTenancy.dataSource;DataSource;Properties for the multitenant aware datasource.;;true;false
cds.multiTenancy.dataSource.pool;String;Pool to use for the multitenant-aware datasource.<br>Possible values are: `hikari`, `tomcat`, `atomikos`.;;false;false
cds.multiTenancy.dataSource.combinePools;Enabled;Properties to control how the connection pools are maintained.<br>This allows to configure, that the connection pools for tenants contained in the same database are combined. Instead of having a dedicated connection pool for each tenant schema.;;true;false
cds.multiTenancy.dataSource.combinePools.enabled;boolean;Determines, if it is enabled.;;false;false
cds.multiTenancy.serviceManager;ServiceManager;Properties for the instance-manager / service-manager client.;;true;false
cds.multiTenancy.serviceManager.timeout;int;The timeout for requests in seconds.;;false;false
cds.multiTenancy.serviceManager.cacheRefreshInterval;Duration;The cache refresh interval (as Duration).;;false;false
cds.multiTenancy.security;Security;Properties for authorization.;;true;false
cds.multiTenancy.security.subscriptionScope;String;The scope by which the subscription endpoints are authorized.;;false;false
cds.multiTenancy.sidecar;Sidecar;Properties for the MTX sidecar client.;;true;false
cds.multiTenancy.sidecar.url;String;The URL of the MTX sidecar.<br>Setting this property, in combination with a present service-manager service binding, activates the MTX features.;;false;false
cds.multiTenancy.sidecar.pollingTimeout;Duration;Specifies the maximum waiting time for the operation to finish.;;false;false
cds.multiTenancy.sidecar.cache;Cache;Properties for the sidecar CDS model and EDMX metadata caches.;;true;false
cds.multiTenancy.sidecar.cache.maxSize;int;The number of entries in the CDS model and EDMX metadata caches.;;false;false
cds.multiTenancy.sidecar.cache.expirationTime;int;The lifetime of an entry in seconds after the entry's creation, the most recent replacement of its value, or its last access.;;false;false
cds.multiTenancy.sidecar.cache.refreshTime;int;The time in seconds after which a cached entry is refreshed.;;false;false
cds.multiTenancy.appUi;AppUi;Properties for the URL to the application's UI endpoints.;;true;false
cds.multiTenancy.appUi.url;String;The URL to the application's UI, used for the 'Go to Application' link.;;false;false
cds.multiTenancy.appUi.tenantSeparator;String;The separator for the tenant in the URL.<br>Possible values are: `.`, `-`.;;false;false
cds.multiTenancy.healthCheck;HealthCheck;Properties for health check of the multitenant-aware datasource.;;true;false
cds.multiTenancy.healthCheck.healthCheckStatement;String;The statement that is used when executing a health check of the multitenant-aware datasource.;;false;false
cds.multiTenancy.healthCheck.interval;Duration;The time a health check result is cached and no further health checks are performed.;;false;false
cds.multiTenancy.healthCheck.enabled;boolean;Determines, if it is enabled.;;false;false
cds.multiTenancy.liquibase;Liquibase;Properties for DB lifecycle management via Liquibase.;;true;false
cds.multiTenancy.liquibase.changeLog;String;The location of the master Liquibase file.;;false;false
cds.multiTenancy.liquibase.contexts;String;Optional: Comma separated list of active contexts.;;false;false
cds.multiTenancy.provisioning;ProvisioningService;Properties for the ProvisioningService from @sap/cds-mtxs.;;true;false
cds.multiTenancy.provisioning.pollingTimeout;Duration;Specifies the maximum waiting time for the provisioning operation to finish.;;false;false
cds.multiTenancy.mtxs;Enabled;Indicates usage of @sap/cds-mtxs module (MTX streamlined).;;true;false
cds.multiTenancy.mtxs.enabled;boolean;Determines, if it is enabled.;;false;false
cds.multiTenancy.mock;Mock;Properties for the SQLite-based MTX mock for local development and testing.;;true;false
cds.multiTenancy.mock.sqliteDirectory;String;Path to the directory to start looking for SQLite database files.;;false;false
cds.multiTenancy.mock.enabled;boolean;Determines, if it is enabled.;;false;false
cds.multiTenancy.compatibility;Enabled;Properties for the MtSubscriptionService API compatibility mode.;;true;false
cds.multiTenancy.compatibility.enabled;boolean;Determines, if it is enabled.;;false;false
cds.persistence;Persistence;Properties for persistence services.;;true;false
cds.persistence.services;Map<String,PersistenceServiceConfig>;Properties for persistence services.<br>The key can be chosen arbitrarily and is used as the persistence service name, if the `name` property is not explicitly defined.<br>In addition it can be leveraged to split configuration across multiple profiles.;com.sap.cds.services.environment.CdsProperties$Persistence$PersistenceServiceConfig;true;false
cds.persistence.services.<key>.name;String;The name of the persistence service.;;false;false
cds.persistence.services.<key>.binding;String;The name of the service binding used for this persistence service. If not set, the name is used.;;false;false
cds.persistence.services.<key>.dataSource;String;The name of the existing data source. If not set, the auto-configured data source of the binding is used.;;false;false
cds.persistence.services.<key>.transactionManager;String;The name of the existing transaction manager. If not set, the transaction manager is automatically created.;;false;false
cds.persistence.services.<key>.enabled;boolean;Determines, if it is enabled.;;false;false
cds.application;Application;Properties for application services.;;true;false
cds.application.services;Map<String,ApplicationServiceConfig>;Properties for application services.<br>The key can be chosen arbitrarily and is used as the application service name, if the `name` property is not explicitly defined.<br>In addition it can be leveraged to split configuration across multiple profiles.;com.sap.cds.services.environment.CdsProperties$Application$ApplicationServiceConfig;true;false
cds.application.services.<key>.name;String;The name of the application service.;;false;false
cds.application.services.<key>.model;String;The qualified name of the CDS service, which is the model definition of this application service.<br>It defaults to the name of the application service itself.;;false;false
cds.application.services.<key>.serve;Serve;Properties to configure how this service is served by protocol adapters.;;true;false
cds.application.services.<key>.serve.ignore;boolean;Determines, if the service is ignored by protocol adapters.;;false;false
cds.application.services.<key>.serve.path;String;The path this service should be served at by protocol adapters.<br>The path is appended to the protocol adapter's base path.<br>If a service is served by multiple protocol adapters, each adapter serves the service under this path.;;false;false
cds.application.services.<key>.serve.protocols;List<String>;The list of protocols adapters this service should be served by.<br>By default the service is served by all available protocol adapters.<br>Possible values are: `odata-v4`, `odata-v2`.;;false;false
cds.application.services.<key>.serve.endpoints;List<Endpoint>;Properties to control more fine-grained under which endpoints this service is served.<br>These properties override the more general properties `paths` and `protocols`.;com.sap.cds.services.environment.CdsProperties$Application$ApplicationServiceConfig$Serve$Endpoint;true;false
cds.application.services.<key>.serve.endpoints.<index>.path;String;The path, this endpoint should be served at by the protocol adapter.<br>The path is appended to the protocol adapter's base path.;;false;false
cds.application.services.<key>.serve.endpoints.<index>.protocol;String;The protocol adapter that serves this endpoint.<br>Possible values are: `odata-v4`, `odata-v2`.;;false;false
cds.remote;Remote;Properties for remote services.;;true;false
cds.remote.services;Map<String,RemoteServiceConfig>;Properties for remote services.<br>The key can be chosen arbitrarily and is mainly intended to be able to split configuration across multiple profiles.;com.sap.cds.services.environment.CdsProperties$Remote$RemoteServiceConfig;true;false
cds.remote.services.<key>.name;String;The name of the remote service.;;false;false
cds.remote.services.<key>.model;String;The qualified name of the CDS service, which is the model definition of this remote service.<br>It defaults to the name of the remote service itself.;;false;false
cds.remote.services.<key>.destination;Destination;Properties to configure a remote destination for this remote service.;;true;false
cds.remote.services.<key>.destination.type;String;The protocol type of the destination.<br>Possible values are: `odata-v4` or `odata-v2`.;;false;false
cds.remote.services.<key>.destination.name;String;The name of the destination in the destination service or SAP Cloud SDK destination accessor.;;false;false
cds.remote.services.<key>.destination.suffix;String;A suffix for this destination, that is appended to the destination's URL.;;false;false
cds.remote.services.<key>.destination.service;String;The name of the service, that is appended to the destination's URL (after the suffix).<br>It defaults to the qualified name of the model definition.;;false;false
cds.remote.services.<key>.destination.properties;Map<String,Object>;A map of generic destination properties supported by SAP Cloud SDK.<br>These properties are used to dynamically build a destination.;;false;false
cds.remote.services.<key>.destination.headers;Map<String,String>;A map of headers and their values, to be added to every outgoing request.;;false;false
cds.remote.services.<key>.destination.queries;Map<String,String>;A map of query parameters and their values, to be added to every outgoing request.;;false;false
cds.remote.services.<key>.destination.retrievalStrategy;String;The retrieval strategy used, when loading destinations from SAP BTP Destination Service.<br>See https://sap.github.io/cloud-sdk/docs/java/features/connectivity/sdk-connectivity-destination-service#retrieval-strategy-options for possible values.;;false;false
cds.remote.services.<key>.destination.tokenExchangeStrategy;String;The token exchange strategy used, when loading destinations from SAP BTP Destination Service.<br>See https://sap.github.io/cloud-sdk/docs/java/features/connectivity/sdk-connectivity-destination-service#token-exchange-options for possible values.;;false;false
cds.locales;Locales;Properties for locale configurations.;;true;false
cds.locales.normalization;Normalization;Properties to configure how locales should be normalized.;;true;false
cds.locales.normalization.defaults;boolean;Determines, if the non-normalization include list, as described in the documentation, is applied.;;false;false
cds.locales.normalization.includeList;List<String>;The list of additional locales to add to the include list of non-normalized locales.;;false;false
cds.errors;Errors;Properties for error handling.;;true;false
cds.errors.extended;boolean;Determines, if error messages are automatically extended with additional debug information (only for development).;;false;false
cds.errors.combined;boolean;Determines, if validation error messages are collected and exceptions are thrown at the end of the Before event handler phase.;;false;false
cds.errors.stackMessages;Enabled;Properties to configure how error messages from the framework are treated.<br>If turned off, only framework error messages, that are explicitly localized are returned.<br>Other errors are mapped to their plain HTTP error code representation.;;true;false
cds.errors.stackMessages.enabled;boolean;Determines, if it is enabled.;;false;false
cds.drafts;Drafts;Properties for draft-enabled entities.;;true;false
cds.drafts.cancellationTimeout;Duration;The maximum amount of time, since the last change, an entity instance is locked by the user who is editing its draft version.;;false;false
cds.drafts.deletionTimeout;Duration;The maximum amount of time a draft is kept, before it is garbage collected.;;false;false
cds.drafts.gc;GC;Properties to configure the automatic draft garbage collection.;;true;false
cds.drafts.gc.interval;Duration;The interval, in which the automatic draft garbage collection is triggered.;;false;false
cds.drafts.gc.enabled;boolean;Determines, if it is enabled.;;false;false
cds.query;Query;Properties for augmentation of CQN queries.;;true;false
cds.query.limit;Limit;Properties for server-driven paging.;;true;false
cds.query.limit.default;int;The default page size for server-driven paging.<br>Setting this property to 0 or -1 disables the default page size.;;false;false
cds.query.limit.max;int;The maximum page size for server-driven paging.<br>Setting this property to 0 or -1 disables the maximum page size.;;false;false
cds.query.limit.reliablePaging;Enabled;Properties for reliable server-driven paging, based on last row of ordered result.;;true;false
cds.query.limit.reliablePaging.enabled;boolean;Determines, if it is enabled.;;false;false
cds.query.implicitSorting;Enabled;Properties for the implicit-sorting feature.;;true;false
cds.query.implicitSorting.enabled;boolean;Determines, if it is enabled.;;false;false
cds.sql;Sql;Properties for SQL generation.;;true;false
cds.sql.supportedLocales;String;A comma-separated list of locales that are considered during query execution<br>of localized requests. This configuration only has effect on other databases<br>than SAP HANA. It only applies, when the query processing falls back to<br>localized views.;;false;false
cds.sql.maxBatchSize;int;The JDBC batch size used for batch and bulk operations.;;false;false
cds.sql.hana;Hana;Configuration properties for an SQL generation on SAP HANA.;;true;false
cds.sql.hana.ignoreLocale;boolean;If set to `true`, this property completely disables locale specific handling on SAP HANA.;;false;false
cds.auditLog;AuditLog;Properties for AuditLog configuration.;;true;false
cds.auditLog.v2;Enabled;Configuration of the AuditLog V2 feature.;;true;false
cds.auditLog.v2.enabled;boolean;Determines, if it is enabled.;;false;false
cds.auditLog.personalData;PersonalData;Configuration of the Personal Data handler.;;true;false
cds.auditLog.personalData.throwOnMissingDataSubject;boolean;If set to {@code true} and the data subject is missing, a `ServiceException` is thrown.;;false;false
cds.auditLog.personalData.enabled;boolean;Determines, if it is enabled.;;false;false
cds.auditLog.outbox;Outbox;Properties to configure AuditLog usage of Outbox.;;true;false
cds.auditLog.outbox.enabled;boolean;Determines, if it is enabled.;;false;false
cds.auditLog.outbox.persistent;Enabled;Controls usage of the persistent Outbox if present.;;true;false
cds.auditLog.outbox.persistent.enabled;boolean;Determines, if it is enabled.;;false;false
cds.auditLog.connectionPool;ConnectionPool;Properties to configure the HTTP connection pool for AuditLog usage.;;true;false
cds.auditLog.connectionPool.maxConnections;Integer;The max amount of connections in the pool.;;false;false
cds.auditLog.connectionPool.maxConnectionsPerRoute;Integer;The max amount of connections from the pool per route;;false;false
cds.auditLog.connectionPool.timeout;Duration;The threshold for connect timeout, socket timeout and connection request timeout.;;false;false
cds.auditLog.connectionPool.combinePools;Enabled;Properties to control how the http connection pools are maintained.<br>This allows to configure, whether all tenants will share a common http connection pool instead of having a dedicated http connection pool for each tenant.;;true;false
cds.auditLog.connectionPool.combinePools.enabled;boolean;Determines, if it is enabled.;;false;false
cds.outbox;Outbox;Properties for Outbox configuration.;;true;false
cds.outbox.inMemory;InMemory;Properties for the in-memory Outbox.;;true;false
cds.outbox.inMemory.emitDuringChangeSetContext;boolean;Specifies whether the outbox emits the event during the current `ChangeSetContext` or afterwards.<br>In case the `ChangeSetContext` wraps a DB transaction, it needs to be considered that<br>emitted messages during the transaction can't be rolled back on cancelled transaction.<br>Messages being emitted after the transaction might get lost, after transaction has been committed successful.;;false;false
cds.outbox.inMemory.enabled;boolean;Determines, if it is enabled.;;false;false
cds.outbox.persistent;Persistent;Properties for the persistent Outbox.;;true;false
cds.outbox.persistent.maxAttempts;int;Specifies the maximum number of attempts to emit a message stored in the Outbox.<br>Messages that have reached the maximum number of attempts are ignored by the Outbox and need to be handled by the application.;;false;false
cds.outbox.persistent.enabled;boolean;Determines, if it is enabled.;;false;false
cds.outbox.persistent.storeLastError;Enabled;Controls storing the error message of the last error in the Outbox.;;true;false
cds.outbox.persistent.storeLastError.enabled;boolean;Determines, if it is enabled.;;false;false
